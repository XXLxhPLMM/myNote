- [Vue](#vue)
  - [模板语法](#模板语法)
  - [生命周期](#生命周期)
  - [render函数](#render函数)
  - [混入](#混入)
  - [porps](#porps)
  - [插件](#插件)
    - [使用](#使用)
- [配置代理](#配置代理)
  - [cli vue.config 代理配置](#cli-vueconfig-代理配置)
    - [方式一](#方式一)
    - [方式二](#方式二)
  - [私有样式](#私有样式)
  - [插槽](#插槽)
  - [路由](#路由)
    - [基本使用](#基本使用)
    - [多级路由](#多级路由)
    - [query](#query)
    - [命名路由](#命名路由)
    - [缓存路由组件](#缓存路由组件)
    - [路由组件生命周期](#路由组件生命周期)
    - [路由守卫](#路由守卫)
      - [全局前置路由守卫](#全局前置路由守卫)
# Vue
## 模板语法
## 生命周期
## render函数
## 混入
## porps
## 插件

### 使用
```js
Vue.use("")
```
# 配置代理
## cli vue.config 代理配置
### 方式一
```js
devServer : {
    proxy : "需要被代理的地址(协议://地址:端口"
}
```
### 方式二
```js
devServer:{
    proxy:{
        'api1'{
            target:"http://loaclhost:8080",
            changerOrigin:true,
            pathRewrite:{'^/api1',''}/* 去除前綴 */
        }
    }
}
```
## 私有样式
## 插槽
## 路由
### 基本使用
### 多级路由
### query
### 命名路由
### 缓存路由组件
1. 作用: 让不展示的路由组件保持挂载,不被销毁
2. 具体代码
```html
<keep-alive include="组件名">
    <!-- 如果不写include的话 里面所有的组件都不会销毁 -->
    <router-view></router-view>
</keep-alive>
```
### 路由组件生命周期
1. 作用: 用于捕获路由组件的状态是否处于激活
2. 具体:
   1. `acitveted` 路由组件被激活时触发
   2. `deactiveted`路由组件失活得时候触发
### 路由守卫
#### 全局前置路由守卫
